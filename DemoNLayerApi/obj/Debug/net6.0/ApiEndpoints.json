[
  {
    "ContainingType": "DemoNLayerApi.Controllers.AuthController",
    "Method": "Login",
    "RelativePath": "api/Auth/login",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "loginRequest",
        "Type": "DemoNLayerApi.DTOs.RequestDTOs.LoginDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "DemoNLayerApi.Controllers.AuthorController",
    "Method": "AddAuthor",
    "RelativePath": "api/Author/create-author",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "name",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "DemoNLayerApi.Controllers.AuthorController",
    "Method": "DeleteAuthor",
    "RelativePath": "api/Author/delete-author",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "DemoNLayerApi.Controllers.AuthorController",
    "Method": "GetAuthorById",
    "RelativePath": "api/Author/get-author-by-id",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "DemoNLayerApi.Models.Models.Author",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "DemoNLayerApi.Controllers.AuthorController",
    "Method": "GetAuthors",
    "RelativePath": "api/Author/get-authors",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[DemoNLayerApi.DTOs.RequestDTOs.AuthorDTO, DemoNLayerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "DemoNLayerApi.Controllers.AuthorController",
    "Method": "UpdateAuthor",
    "RelativePath": "api/Author/update-author",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "new_name",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "DemoNLayerApi.Controllers.BookController",
    "Method": "AddBooks",
    "RelativePath": "api/Book/add-book",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "bookRequest",
        "Type": "DemoNLayerApi.DTOs.RequestDTOs.BookRequestDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "DemoNLayerApi.Controllers.BookController",
    "Method": "DeleteBook",
    "RelativePath": "api/Book/delete-book",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "DemoNLayerApi.Controllers.BookController",
    "Method": "GetAllBooks",
    "RelativePath": "api/Book/get-books",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[DemoNLayerApi.Models.Models.Book, DemoNLayerApi.Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "DemoNLayerApi.Controllers.BookController",
    "Method": "GetBooksByTitle",
    "RelativePath": "api/Book/get-books-by-title",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "title",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[DemoNLayerApi.Models.Models.Book, DemoNLayerApi.Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "DemoNLayerApi.Controllers.BookController",
    "Method": "UpdateBook",
    "RelativePath": "api/Book/update-book",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "bookRequest",
        "Type": "DemoNLayerApi.DTOs.RequestDTOs.BookUpdateDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "DemoNLayerApi.Controllers.UserController",
    "Method": "CreateUser",
    "RelativePath": "api/User/create-user",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userRequest",
        "Type": "DemoNLayerApi.DTOs.RequestDTOs.UserDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "DemoNLayerApi.Controllers.UserController",
    "Method": "GetUsers",
    "RelativePath": "api/User/get-users",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[DemoNLayerApi.Models.Models.User, DemoNLayerApi.Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  }
]